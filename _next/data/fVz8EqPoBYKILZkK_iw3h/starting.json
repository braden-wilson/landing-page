{"pageProps":{"appDevfiles":"# Application Developer - Stop Configuring and Start Coding\n\n---\n\n## **Leverage ready to use development environments**\n\nDon’t know where to start? The collection of devfiles in a devfile\nregistry provides a wide range of samples and stacks with starter\napplications that can provide a starting point for you to use different\nlanguages and frameworks. Whether you are starting from scratch or\nworking with an existing application, we got you covered.\n\n## **Version development environment**\n\nHaving the devfile included as part of the application allows you to\neasily reproduce the development environment in the same way as any\nother developers in your organization. You don’t have to worry about the\ncomplexity of setting up the environment so that you can focus on\ndeveloping your applications.\n\n## **Choose your tools**\n\nYou will have the flexibility of using different development tools, but\nstill, be able to produce the consistent output described in the\ndevfile. Advanced developers can also customize the build when needed.\n\n## **Reduce the discrepancies between development and production**\n\nUsing the devfiles provided by the stack providers will minimize the\nenvironmental discrepancies between different stages of development,\ne.g. development, staging, CI, and production.\n\n## **Make quick turnarounds on code changes**\n\nThe inner-loop and outer-loop instructions defined in the devfile allow\nyou to test out your code changes quickly in the tools. You will use the\nworkflow recommended by the stack provider that is the expert on the\nspecific runtime.\n","appStarting":"# Getting Started for Application Developers\n\n---\n\n## **Devfile specification**\n\n...\n\n## **List of tools that provides devfile support with links**\n\n...\n\n## **Community registry viewer**\n\n...\n","techDevfiles":"# Technology and Tools Builders\n\n---\n\n## **Shielded from runtime specific implementation**\n\nNo need to build custom runtime support. Let the expert do the job.\nRuntime teams know the best way to build and run applications on their\nservers.\n\n## **Zero maintenance for runtime support**\n\nTools will get the runtime support update for free whenever a new stack\ngets updated in the devfile registry. New stacks can be picked up by the\ntools easily without tools update.\n\n## **Shared configuration that can be reused across different tools**\n\nDifferent tools work in a slightly different way. Sometimes it is hard\nto convince users to switch to your tool due to configuration\ndifferences. Sharing the same devfile specification support reduces the\nhurdle for users to make that change.\n","techStarting":"# Getting Started for Tools Builders\n\n---\n\n## **Devfile specification**\n\n...\n\n## **Detailed runtime behavior of the tools (e.g. lifecycle of containers, init container behavior)**\n\n...\n\n## **Devfile library for reading and writing to devfile**\n\n...\n\n## **Devfile registry library for interacting with the devfile registry, e.g. finding the list of devfiles available, metadata associated with each devfile, and downloading content of the stacks.**\n\nGo Library REST API\n\n## **Community devfile registry**\n\n...\n\n## **Custom registry discovery**\n\n...\n","enterpriseDevfiles":"# Enterprise Architect and Runtime Provider\n\n---\n\n## **Define the standard way of working**\n\nBeing the expert on language and framework, you can share the\nrecommended workflow on developing applications based on different\nlanguages and frameworks.\n\n## **Build once, run anywhere**\n\nDevelop the application stacks once, and they will work across different\ntools. There is no need to build and maintain custom support for each\ndevelopment tool.\n\n## **Easy sharing of workflows**\n\nBy adding the stacks or samples that you have developed to a devfile\nregistry, application developers can easily discover the devfiles that\nyou provide. You can also provide starter projects or samples to\nshowcase the usage of a specific runtime or framework.\n\n## **Governance**\n\nAdd the necessary policy settings and compliance policies as part of the\ndevfile to ensure anyone who uses the stack will follow the same\nworkflow. By using the parent support in the devfile, any update on\nthese policies, security fixes, and workflow will get picked up\nautomatically to ensure consistency.\n","enterpriseStarting":"# Getting Started for Enterprise Architects and Runtime Providers\n\n---\n\n## **Devfile specification**\n\n...\n\n## **Stack author’s guide documentation**\n\n...\n\n## **Onboarding process and requirements of the community registry**\n\n...\n\n## **Community registry viewer**\n\n...\n","registryDevfiles":"# Registry Administrator\n\n---\n\n## **Customized registry**\n\nProvides a custom registry to enable developers to view the list of\ndevfiles that describes the custom workflow for application development\nwithin an organization.\n\n## **Enable a single point of management for applications built from stacks**\n\nControls the lifecycle of the stacks within the custom registry and\npushes updated devfiles to the registry during the registry update.\n\n## **Enforce standard on the devfiles**\n\nCustomize the registry build tools to provide extra validations to\nensure the devfiles in the custom registry follow the standard of the\norganization.\n","registryStarting":"# Getting Started for Registry Administrators\n\n---\n\n## **Registry viewer installation**\n\n...\n\n## **Custom registry installation**\n\n...\n\n## **Registry build tools**\n\n...\n\n## **Registry index**\n\n...\n"},"__N_SSG":true}